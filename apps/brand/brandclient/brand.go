// Code generated by goctl. DO NOT EDIT.
// Source: brand.proto

package brandclient

import (
	"context"

	"github.com/v3nooonn/trytry/apps/brand/pb/brand"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BrandInfo = brand.BrandInfo
	InfoReq   = brand.InfoReq

	Brand interface {
		Info(ctx context.Context, in *InfoReq, opts ...grpc.CallOption) (*BrandInfo, error)
	}

	defaultBrand struct {
		cli zrpc.Client
	}
)

func NewBrand(cli zrpc.Client) Brand {
	return &defaultBrand{
		cli: cli,
	}
}

func (m *defaultBrand) Info(ctx context.Context, in *InfoReq, opts ...grpc.CallOption) (*BrandInfo, error) {
	client := brand.NewBrandClient(m.cli.Conn())
	return client.Info(ctx, in, opts...)
}
