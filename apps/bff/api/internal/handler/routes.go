// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	dashboard "github.com/v3nooonn/trytry/apps/bff/api/internal/handler/dashboard"
	ping "github.com/v3nooonn/trytry/apps/bff/api/internal/handler/ping"
	product "github.com/v3nooonn/trytry/apps/bff/api/internal/handler/product"
	"github.com/v3nooonn/trytry/apps/bff/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Public},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: ping.Handler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/ping"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Authentication, serverCtx.Authorization, serverCtx.Language, serverCtx.RemoteAddr},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: dashboard.CustomerServiceHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/dashboard"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Authentication, serverCtx.Authorization, serverCtx.Language, serverCtx.RemoteAddr},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/s",
					Handler: product.PaginationHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:id",
					Handler: product.InfoHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/product"),
	)
}
