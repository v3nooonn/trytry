syntax = "v1"

info(
	title: "Production"
	desc: "Production related APIs definition"
	author: "v3nooom"
	email: "v3nooom@outlook.com"
)

@server(
	//	middleware: Schema, Authentication, Authorization, Language, RemoteAddr
	middleware: Authentication, Authorization, Language, RemoteAddr
	group: product
	prefix: product
)
service bff-api {
	@handler Pagination
	get /s (PgnReq) returns (PageResp)
	
	@handler Info
	get /:id (URIID) returns (InfoResp)
}

// Pagination
type (
	PageResp {
		Pagination  PgnResp       `json:"pagination"`
		Productions []Production  `json:"data"`
	}

	Production {
		ID           int64  `json:"id"`
		Brand        string `json:"brand"`
		Category     string `json:"category"`
		Series       string `json:"series"`
		Name         string `json:"name"`
		Abbreviation string `json:"abbreviation"`
		CreatedAt    int64  `json:"created_at"`
		UpdatedAt    int64  `json:"updated_at"`
	}
)

// Info
type (
	InfoResp {
		ID           int64  `json:"id"`
		Brand        Brand  `json:"brand"`
		Category     string `json:"category"`
		Series       string `json:"series"`
		Name         string `json:"name"`
		Abbreviation string `json:"abbreviation"`
		CreatedAt    int64  `json:"created_at"`
		UpdatedAt    int64  `json:"updated_at"`
	}

	Brand {
		ID           int64        `json:"id"`
		Organization Organization `json:"organization"`
	}
	Organization {
		ID           int64  `json:"id"`
		Name         string `json:"name"`
		Abbreviation string `json:"abbreviation"`
	}
)