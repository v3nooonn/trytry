// Code generated by goctl. DO NOT EDIT!
// Source: oauth.proto

package oauthclient

import (
	"context"

	"github.com/v3nooonn/trytry-based-on-looklook/apps/oauth/cmd/rpc/pb/oauth"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = oauth.Request
	Response = oauth.Response

	Oauth interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultOauth struct {
		cli zrpc.Client
	}
)

func NewOauth(cli zrpc.Client) Oauth {
	return &defaultOauth{
		cli: cli,
	}
}

func (m *defaultOauth) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := oauth.NewOauthClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
