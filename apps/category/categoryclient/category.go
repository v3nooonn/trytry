// Code generated by goctl. DO NOT EDIT.
// Source: category.proto

package categoryclient

import (
	"context"

	"github.com/v3nooonn/trytry/apps/category/pb/category"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CategoryInfo = category.CategoryInfo
	InfoReq      = category.InfoReq

	Category interface {
		Info(ctx context.Context, in *InfoReq, opts ...grpc.CallOption) (*CategoryInfo, error)
	}

	defaultCategory struct {
		cli zrpc.Client
	}
)

func NewCategory(cli zrpc.Client) Category {
	return &defaultCategory{
		cli: cli,
	}
}

func (m *defaultCategory) Info(ctx context.Context, in *InfoReq, opts ...grpc.CallOption) (*CategoryInfo, error) {
	client := category.NewCategoryClient(m.cli.Conn())
	return client.Info(ctx, in, opts...)
}
